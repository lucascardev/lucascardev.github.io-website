{"version":3,"sources":["style/global.style.js","services/api.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Header","header","Gitinfo","Avatar","img","Contact","Username","h1","PageHolder","Main","Footer","footer","API","Axios","create","baseURL","App","useState","avatarimg","setAvatarimg","username","setUsername","useEffect","a","get","response","data","avatar_url","login","getmyprofile","src","href","alt","className","size","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.adfbe3a5.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nflex: 1;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n@media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex: 1;\r\n    padding: 8px 5px;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    flex-wrap: wrap;\r\n  }\r\nflex: 1;\r\nbackground-color: cadetblue;\r\ndisplay: flex;\r\nflex-direction: row;\r\noverflow:hidden;\r\n/* position: absolute; */\r\npadding: 8px 10px;\r\njustify-content: space-between;\r\n\r\n.techs {\r\n    @media only screen and (max-width: 600px) {\r\n            font-size: 6vw;\r\n            justify-content: space-between;\r\n   }   \r\n    background: whitesmoke;\r\n    border-radius: 1px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: row;  \r\n    font-size: 3vw;\r\n    color: #ff742b;\r\n    padding : 8px;\r\n    margin-top: 8px;\r\n    \r\n}\r\n`;\r\n\r\nexport const Gitinfo = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n    flex-direction: row;\r\n  }\r\ndisplay:flex;\r\nalign-self:center;\r\nflex-direction: row;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n\r\n@media only screen and (max-width: 600px) {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\nwidth: 60px;\r\nalign-self: center;\r\nheight: 60px;\r\nborder-radius: 50%;\r\ndisplay: flex;\r\n`;\r\n\r\nexport const Contact = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n    font-size: 16px;\r\n    padding: 8px;\r\n  }\r\n align-self: center;\r\n font-size: 21px;\r\n display: flex;\r\n flex-direction: column;\r\n\r\np{\r\n    color: whitesmoke;\r\n    display: flex; \r\n    margin-top: 5px;\r\n}\r\na {\r\n    color: whitesmoke;\r\n    transition: color 0.2s;\r\n    display: flex;\r\n    text-decoration: none;\r\n    background: #ff742b;\r\n    padding: 4px;\r\n    border-radius: 3px;\r\n}\r\n`;\r\n\r\nexport const Username = styled.h1`\r\n@media only screen and (max-width: 600px) {\r\n    align-self: center;\r\n    font-size: 28px;\r\n  }\r\ncolor: #ff742b; \r\nalign-self: center;\r\npadding: 20px;\r\ndisplay: flex;\r\na{\r\n    color: whitesmoke;\r\n    transition: color 0.2s;\r\n}\r\na:hover{\r\n    color: #ff742b; \r\n}\r\n`;\r\n\r\nexport const PageHolder = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n    align-self: center;\r\n    flex:1;\r\n  }\r\ndisplay: flex;\r\npadding: 16px;\r\n`;\r\n\r\nexport const Main = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n  }\r\ndisplay: flex;\r\nflex: 1;\r\npadding: 32px;\r\nbackground-color: cadetblue;\r\ncolor: whitesmoke;\r\nborder-radius: 2px;\r\nflex-direction: column;\r\nh1 {\r\n    display: flex;\r\n}\r\nh3 {\r\n    margin-top: 16px;\r\n    margin-bottom: 16px;\r\n}\r\np {\r\n    margin-top: 16px;\r\n    text-align: center;\r\n    margin-bottom: 16px;\r\n    a {\r\n    color: whitesmoke;\r\n    transition: color 0.2s;\r\n    text-decoration: none;\r\n    background: #ff742b;\r\n    padding: 4px;\r\n    border-radius: 3px;\r\n    margin: 2px;\r\n    }\r\n}\r\n.linkholder {\r\n    background: whitesmoke;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    justify-content:center;\r\n    flex-direction: row;\r\n    a{ \r\n        @media only screen and (max-width: 600px) {\r\n            font-size: 10vw;\r\n   }   \r\n   display: flex;\r\n    font-size: 5vw;\r\n    color: #ff742b;\r\n    transition: color 0.2s;\r\n   padding : 8px;\r\n   align-items: center;\r\n}\r\na:hover{\r\n    color: cadetblue; \r\n}\r\n}\r\n\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\nbackground-color: cadetblue;\r\ndisplay: flex;\r\nflex-direction: column;\r\n/* position: absolute; */\r\nflex: 1;\r\npadding: 16px;\r\njustify-content: space-between;\r\ntext-align: center;\r\np {\r\n    \r\n    color: whitesmoke;\r\n    a{\r\n      \r\n        color: #ff742b;\r\n    }\r\n}\r\n`;\r\n\r\n","import Axios from 'axios';\r\n\r\nconst API = Axios.create({  \r\n    baseURL: 'https://api.github.com/' \r\n});\r\n\r\nexport default API;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  FaWineBottle,\n  FaWineGlass,\n  FaGithub,\n  FaInstagram,\n  FaHome,\n  FaLinkedin,\n  FaTooth,\n  FaHtml5,\n  FaCss3,\n  FaReact,\n  FaNodeJs,\n  FaDocker,\n  FaJsSquare,\n  FaGit,\n} from \"react-icons/fa\";\n\nimport {\n  Container,\n  Header,\n  Avatar,\n  Username,\n  Main,\n  Contact,\n  Footer,\n  PageHolder,\n  Gitinfo\n} from \"./style/global.style\";\n\nimport API from \"./services/api\";\n\nfunction App() {\n  const [avatarimg, setAvatarimg] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    async function getmyprofile() {\n      const response = await API.get(\"users/lucascardev\");\n      // console.log(response);\n      setAvatarimg(response.data.avatar_url);\n      setUsername(response.data.login);\n    }\n    getmyprofile();\n  }, []);\n\n  return (\n    <Container>\n      <Header>\n        <Gitinfo>\n          <Avatar src={avatarimg} />\n          <Username>\n            @\n            <a href=\"https://github.com/lucascardev\" alt=\"Github profile\">\n              {username}\n            </a>\n          </Username>\n        </Gitinfo>\n        <Contact>\n          <p>\n            <b>Phonenumber:</b> &nbsp; <a href=\"tel:+5571992931330\">+55(71)99293-1330</a>\n          </p>\n          <p>\n            <b>Email: </b> &nbsp; <a href=\"mailto:lucasmatheussc97@gmail.com\">lucasmatheussc97@gmail.com</a>\n          </p>\n        </Contact>\n        <div className=\"techs\">\n        <FaCss3 /><FaDocker /><FaHtml5 /><FaReact /><FaNodeJs /><FaJsSquare /><FaGit />\n        </div>\n      </Header>\n\n      <PageHolder>\n        <Main>\n          <h1>Hello there. I'm Lucas.</h1>\n          <h3>\n          lets take a wine some time.\n          </h3>\n          <b><FaWineBottle size={45} /> <FaWineGlass size={25} /></b>\n          <hr />\n          <p> Keep contact with me on my social media. </p>\n            \n            \n           <p>Also check my work on <a href=\"https://www.fiverr.com/s2/e1819fb09e\">Fiverr.</a></p>\n\n          <div className=\"linkholder\">\n            <a href=\"https://www.instagram.com/lucas_mtheus/\">\n              <FaInstagram />\n            </a>\n            <a href=\"https://github.com/lucascardev\">\n              <FaGithub />\n            </a>\n            <a href=\"https://lightupweb.mailchimpsites.com/\">\n              <FaHome />\n            </a>\n            <a href=\"https://www.linkedin.com/in/lucas-matheus-s-cardoso-266884169/\">\n              <FaLinkedin />\n            </a>\n          </div>\n\n          <p> Im also a dentistry student, at 6 period... Half of way... </p>\n          <div className=\"linkholder\">\n            <a href=\"https://www.instagram.com/odontosemcomplicacao/\">\n              <FaTooth />\n            </a>\n          </div>\n        </Main>\n      </PageHolder>\n\n      <Footer>\n        <p>This page was build using the{\" \"}<a href=\"https://pages.github.com/\"><b>GitHub Pages</b></a>{\" \"}\n          an excelent frontend server.\n        </p>\n      </Footer>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/global.style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}