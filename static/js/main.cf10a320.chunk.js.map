{"version":3,"sources":["style/global.style.js","services/api.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Header","header","Gitinfo","Avatar","img","Contact","Username","h1","PageHolder","Main","Footer","footer","API","Axios","create","baseURL","App","useState","avatarimg","setAvatarimg","username","setUsername","repos","setRepos","useEffect","a","get","response","repos_response","data","avatar_url","login","getmyprofile","src","href","alt","className","map","repo","description","html_url","full_name","id","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf10a320.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nflex: 1;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n@media only screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex: 1;\r\n    padding: 8px 5px;\r\n  }\r\n  @media only screen and (max-width: 800px) {\r\n    flex-wrap: wrap;\r\n  }\r\nflex: 1;\r\nbackground-color: cadetblue;\r\ndisplay: flex;\r\nflex-direction: row;\r\noverflow:hidden;\r\n/* position: absolute; */\r\npadding: 8px 10px;\r\njustify-content: space-between;\r\n\r\n.techs {\r\n    @media only screen and (max-width: 600px) {\r\n            font-size: 6vw;\r\n            justify-content: space-between;\r\n   }   \r\n    background: whitesmoke;\r\n    border-radius: 1px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: row;  \r\n    font-size: 3vw;\r\n    color: #ff742b;\r\n    padding : 8px;\r\n    margin-top: 8px;\r\n    \r\n}\r\n`;\r\n\r\nexport const Gitinfo = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n    flex-direction: row;\r\n  }\r\ndisplay:flex;\r\nalign-self:center;\r\nflex-direction: row;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n\r\n@media only screen and (max-width: 600px) {\r\n    width: 60px;\r\n    height: 60px;\r\n  }\r\nwidth: 60px;\r\nalign-self: center;\r\nheight: 60px;\r\nborder-radius: 50%;\r\ndisplay: flex;\r\n`;\r\n\r\nexport const Contact = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n    font-size: 16px;\r\n    padding: 8px;\r\n  }\r\n align-self: center;\r\n font-size: 21px;\r\n display: flex;\r\n flex-direction: column;\r\n\r\np{\r\n    color: whitesmoke;\r\n    display: flex; \r\n    margin-top: 5px;\r\n}\r\na {\r\n    color: whitesmoke;\r\n    transition: color 0.2s;\r\n    display: flex;\r\n    text-decoration: none;\r\n    background: #ff742b;\r\n    padding: 4px;\r\n    border-radius: 3px;\r\n}\r\n`;\r\n\r\nexport const Username = styled.h1`\r\n@media only screen and (max-width: 600px) {\r\n    align-self: center;\r\n    font-size: 28px;\r\n  }\r\ncolor: #ff742b; \r\nalign-self: center;\r\npadding: 20px;\r\ndisplay: flex;\r\na{\r\n    color: whitesmoke;\r\n    transition: color 0.2s;\r\n}\r\na:hover{\r\n    color: #ff742b; \r\n}\r\n`;\r\n\r\nexport const PageHolder = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n    align-self: center;\r\n    flex:1;\r\n  }\r\ndisplay: flex;\r\npadding: 16px;\r\n`;\r\n\r\nexport const Main = styled.div`\r\n@media only screen and (max-width: 600px) {\r\n  }\r\ndisplay: flex;\r\nflex: 1;\r\npadding: 32px;\r\nbackground-color: cadetblue;\r\ncolor: whitesmoke;\r\nborder-radius: 2px;\r\nflex-direction: column;\r\nh1 {\r\n    display: flex;\r\n}\r\nh3 {\r\n    margin-top: 16px;\r\n    margin-bottom: 16px;\r\n}\r\np {\r\n    margin-top: 16px;\r\n    text-align: center;\r\n    margin-bottom: 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    fieldset {\r\n        margin-top: 8px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 6px;\r\n        border-radius:2px;\r\n        border: 2px solid #ff742b;\r\n        background: whitesmoke;\r\n        legend {\r\n            font-size: 10px;\r\n            padding: 2px;\r\n            text-align: left;\r\n            background: #ff742b;\r\n            border-radius: 2px;\r\n        }\r\n    }\r\n    a {\r\n    color: whitesmoke;\r\n    transition: color 0.2s;\r\n    text-decoration: none;\r\n    background: #ff742b;\r\n    padding: 4px;\r\n    border-radius: 3px;\r\n    margin: 2px;\r\n    }\r\n}\r\n.linkholder {\r\n    background: whitesmoke;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    justify-content:center;\r\n    flex-direction: row;\r\n    a{ \r\n        @media only screen and (max-width: 600px) {\r\n            font-size: 10vw;\r\n   }   \r\n   display: flex;\r\n    font-size: 5vw;\r\n    color: #ff742b;\r\n    transition: color 0.2s;\r\n   padding : 8px;\r\n   align-items: center;\r\n}\r\na:hover{\r\n    color: cadetblue; \r\n}\r\n}\r\n\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\nbackground-color: cadetblue;\r\ndisplay: flex;\r\nflex-direction: column;\r\n/* position: absolute; */\r\nflex: 1;\r\npadding: 16px;\r\njustify-content: space-between;\r\ntext-align: center;\r\np {\r\n    \r\n    color: whitesmoke;\r\n    a{\r\n      \r\n        color: #ff742b;\r\n    }\r\n}\r\n`;\r\n\r\n","import Axios from 'axios';\r\n\r\nconst API = Axios.create({  \r\n    baseURL: 'https://api.github.com/' \r\n});\r\n\r\nexport default API;\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n// import { Scene, PerspectiveCamera, WebGLRenderer, Mesh, MeshBasicMaterial, BoxGeometry } from 'three';\r\n\r\nimport {\r\n\tFaWineBottle,\r\n\tFaWineGlass,\r\n\tFaGithub,\r\n\tFaInstagram,\r\n\tFaHome,\r\n\tFaLinkedin,\r\n\tFaTooth,\r\n\tFaHtml5,\r\n\tFaCss3,\r\n\tFaReact,\r\n\tFaNodeJs,\r\n\tFaDocker,\r\n\tFaJsSquare,\r\n\tFaGit,\r\n} from 'react-icons/fa'\r\n\r\nimport { SiTypescript } from 'react-icons/si'\r\n\r\nimport {\r\n\tContainer,\r\n\tHeader,\r\n\tAvatar,\r\n\tUsername,\r\n\tMain,\r\n\tContact,\r\n\tFooter,\r\n\tPageHolder,\r\n\tGitinfo,\r\n} from './style/global.style'\r\n\r\nimport API from './services/api'\r\n\r\n\r\n  \r\n\r\n// const scene = new Scene();\r\n// const camera = new PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\r\n// const renderer = new WebGLRenderer();\r\n// renderer.setSize( window.innerWidth, window.innerHeight );\r\n// document.body.appendChild( renderer.domElement );\r\n\r\n// const geometry = new BoxGeometry();\r\n// const material = new MeshBasicMaterial( { color: 0x00ff00 } );\r\n// const cube = new Mesh( geometry, material );\r\n\r\n\r\n// //create a smiling face with 3D library\r\n// const faceGeometry = new BoxGeometry(0.5, 0.5, 0.5);\r\n// const faceMaterial = new MeshBasicMaterial({ color: 0xffff00 });\r\n// const face = new Mesh(faceGeometry, faceMaterial);\r\n\r\n// //create a head with 3D library\r\n// const headGeometry = new BoxGeometry(1, 1, 1);\r\n// const headMaterial = new MeshBasicMaterial({ color: 0xffff00 });\r\n// const head = new Mesh(headGeometry, headMaterial);\r\n\r\n// //create a body with 3D library\r\n// const bodyGeometry = new BoxGeometry(1, 1, 1);\r\n// const bodyMaterial = new MeshBasicMaterial({ color: 0xffff00 });\r\n// const body = new Mesh(bodyGeometry, bodyMaterial);\r\n\r\n// //create a left arm with 3D library\r\n// const leftArmGeometry = new BoxGeometry(1, 1, 1);\r\n// const leftArmMaterial = new MeshBasicMaterial({ color: 0xffff00 });\r\n// const leftArm = new Mesh(leftArmGeometry, leftArmMaterial);\r\n\r\n// //create a right arm with 3D library\r\n// const rightArmGeometry = new BoxGeometry(1, 1, 1);\r\n// const rightArmMaterial = new MeshBasicMaterial({ color: 0xffff00 });\r\n// const rightArm = new Mesh(rightArmGeometry, rightArmMaterial);\r\n\r\n// //create a left leg with 3D library\r\n// const leftLegGeometry = new BoxGeometry(1, 1, 1);\r\n// const leftLegMaterial = new MeshBasicMaterial({ color: 0xffff00 });\r\n// const leftLeg = new Mesh(leftLegGeometry, leftLegMaterial);\r\n\r\n// //create a right leg with 3D library\r\n// const rightLegGeometry = new BoxGeometry(1, 1, 1);\r\n// const rightLegMaterial = new MeshBasicMaterial({ color: 0xffff00 });\r\n// const rightLeg = new Mesh(rightLegGeometry, rightLegMaterial);\r\n\r\n// scene.add( face, body, head, leftArm, rightArm, leftLeg, rightLeg );\r\n\r\n// //set position of objects\r\n// face.position.set(40, 0, 0);\r\n// head.position.set(40, 0, 0);\r\n// body.position.set(30, 0, 0);\r\n// leftArm.position.set(30, 30, 0);\r\n// rightArm.position.set(30, -30, 0);\r\n\r\n// camera.position.z = 5;\r\n\r\n// function animate() {\r\n// \trequestAnimationFrame( animate );\r\n// \trenderer.render( scene, camera );\r\n//   //show the face\r\n\r\n  \r\n// }\r\n// animate();\r\n\r\n\r\nfunction App() {\r\n\tconst [avatarimg, setAvatarimg] = useState('')\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [repos, setRepos] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getmyprofile() {\r\n\t\t\tconst response = await API.get('users/lucascardev')\r\n\t\t\t// console.log(response);\r\n\t\t\tconst repos_response = await API.get('users/lucascardev/repos')\r\n\t\t\tsetRepos(repos_response.data)\r\n\t\t\tsetAvatarimg(response.data.avatar_url)\r\n\t\t\tsetUsername(response.data.login)\r\n\t\t}\r\n\t\tgetmyprofile()\r\n\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Header>\r\n\t\t\t\t<Gitinfo>\r\n\t\t\t\t\t<Avatar src={avatarimg} />\r\n\t\t\t\t\t<Username>\r\n\t\t\t\t\t\t@\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref='https://github.com/lucascardev'\r\n\t\t\t\t\t\t\talt='Github profile'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{username}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</Username>\r\n\t\t\t\t</Gitinfo>\r\n\t\t\t\t<Contact>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Phonenumber:</b> &nbsp;{' '}\r\n\t\t\t\t\t\t<a href='tel:+5571992931330'>+55(71)99293-1330</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<b>Email: </b> &nbsp;{' '}\r\n\t\t\t\t\t\t<a href='mailto:lucasmatheussc97@gmail.com'>\r\n\t\t\t\t\t\t\tlucasmatheussc97@gmail.com\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Contact>\r\n\r\n\t\t\t\t<div className='techs'>\r\n\t\t\t\t\t<SiTypescript />\r\n\t\t\t\t\t<FaCss3 />\r\n\t\t\t\t\t<FaDocker />\r\n\t\t\t\t\t<FaHtml5 />\r\n\t\t\t\t\t<FaReact />\r\n\t\t\t\t\t<FaNodeJs />\r\n\t\t\t\t\t<FaJsSquare />\r\n\t\t\t\t\t<FaGit />\r\n\t\t\t\t</div>\r\n\t\t\t</Header>\r\n\t\t\t<PageHolder>\r\n\t\t\t\t<Main>\r\n\t\t\t\t\t<h1>Hello there. I'm lucascardev. </h1>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tI'm a lover of coding, and try to always follows the\r\n\t\t\t\t\t\tbest pratices for web development. Actualy i have other\r\n\t\t\t\t\t\tprojects on my github, but i'm not showing them here.\r\n\t\t\t\t\t\tOne of my work is an Dentistry scheduling application\r\n\t\t\t\t\t\tthat will try to turn in a business. My story in\r\n\t\t\t\t\t\tprogamming is pretty new, i have about 2 years of\r\n\t\t\t\t\t\texperience. I'm also will start my software engineering\r\n\t\t\t\t\t\tdegree soon. My main goal is to be a full stack developer.\r\n\t\t\t\t\t</p>\r\n\r\n\r\n\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p> Keep contact with me on my social media. </p>\r\n\t\t\t\t\t<div className='linkholder'>\r\n\t\t\t\t\t\t<a href='https://www.instagram.com/lucas_mtheus/'>\r\n\t\t\t\t\t\t\t<FaInstagram />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href='https://github.com/lucascardev'>\r\n\t\t\t\t\t\t\t<FaGithub />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href='https://lightupweb.mailchimpsites.com/'>\r\n\t\t\t\t\t\t\t<FaHome />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href='https://www.linkedin.com/in/lucas-matheus-s-cardoso-266884169/'>\r\n\t\t\t\t\t\t\t<FaLinkedin />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<p> Im also a dentistry student, at last period... </p>\r\n\t\t\t\t\t<div className='linkholder'>\r\n\t\t\t\t\t\t<a href='https://www.instagram.com/odontosemcomplicacao/'>\r\n\t\t\t\t\t\t\t<FaTooth />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{repos.map((repo) => (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>Repo - {repo.description}</h3>\r\n\t\t\t\t\t\t\t<p key={repo.id}>\r\n\t\t\t\t\t\t\t\t<a href={repo.html_url}>{repo.full_name}</a>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Main>\r\n\t\t\t</PageHolder>\r\n\r\n\t\t\t<Footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tThis page was build using the{' '}\r\n\t\t\t\t\t<a href='https://pages.github.com/'>\r\n\t\t\t\t\t\t<b>GitHub Pages</b>\r\n\t\t\t\t\t</a>{' '}\r\n\t\t\t\t\tan excelent frontend server.\r\n\t\t\t\t</p>\r\n\t\t\t</Footer>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/global.style.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}